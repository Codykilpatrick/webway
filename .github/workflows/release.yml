name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  release:
    name: Release Packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

      - name: Build packages
        run: yarn build

      - name: Check if there are changesets to consume
        id: changeset-check
        run: |
          if [ -n "$(ls .changeset/*.md 2>/dev/null | grep -v README.md | grep -v template.md | head -1)" ]; then
            echo "has_changesets=true" >> $GITHUB_OUTPUT
            echo "ðŸ“¦ Changesets found - will prepare release"
          else
            echo "has_changesets=false" >> $GITHUB_OUTPUT
            echo "âœ… No changesets found - skipping release preparation"
          fi

      - name: Prepare release PR
        if: steps.changeset-check.outputs.has_changesets == 'true'
        run: yarn release:prepare
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: steps.changeset-check.outputs.has_changesets == 'false'
        run: |
          # Only create releases when there are no pending changesets
          # This means a release PR was just merged
          yarn release:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
